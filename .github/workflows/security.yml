name: Schritt 7: Security-Tooling/CI – Semgrep (SARIF) & Trivy FS (SARIF)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  security-events: write

concurrency:
  group: security-${{ github.ref }}
  cancel-in-progress: true

jobs:
  semgrep-sast:
    name: Semgrep SAST
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: semgrep.yml
          args: --sarif --output=semgrep.sarif
        env:
          SEMGREP_ENABLE_VERSION_CHECK: "0"

      - name: Upload Semgrep SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif
          category: semgrep

  trivy-fs:
    name: Trivy FS scan (Repository)
    runs-on: ubuntu-latest
    needs: [ semgrep-sast ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Trivy FS
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-fs.sarif'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'
          exit-code: '0'     # Findings -> Job bleibt grün

      - name: Upload Trivy FS SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-fs.sarif
          category: trivy-fs

  # --- OPTIONAL: erst aktivieren, wenn eine erreichbare Test-URL existiert ---
  # zap-baseline:
  #   name: OWASP ZAP Baseline (optional)
  #   runs-on: ubuntu-latest
  #   needs: [ trivy-fs ]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Run ZAP Baseline
  #       uses: zaproxy/action-baseline@v0.12.0
  #       with:
  #         target: "http://<deine-test-url>"
  #         cmd_options: '-a'
  #       continue-on-error: true
